

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 18 17:14:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.35
    17                           ; Generated 05/05/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K50 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TRISCbits	set	3988
    52  0000                     _LATC	set	3979
    53  0000                     _ANSELC	set	3933
    54  0000                     _OSCCON	set	4051
    55  0000                     _PORTD	set	3971
    56  0000                     _LATCbits	set	3979
    57  0000                     _ANSELD	set	3934
    58  0000                     _TRISC	set	3988
    59  0000                     _TRISD	set	3989
    60  0000                     _LATD	set	3980
    61                           
    62                           ; #config settings
    63                           
    64                           	psect	cinit
    65  007EEE                     __pcinit:
    66                           	callstack 0
    67  007EEE                     start_initialization:
    68                           	callstack 0
    69  007EEE                     __initialization:
    70                           	callstack 0
    71  007EEE                     end_of_initialization:
    72                           	callstack 0
    73  007EEE                     __end_of__initialization:
    74                           	callstack 0
    75  007EEE  0100               	movlb	0
    76  007EF0  EFC9  F03F         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81  000001                     ??_send2LCD:
    82  000001                     LCD_cmd@cx:
    83                           	callstack 0
    84                           
    85                           ; 1 bytes @ 0x0
    86  000001                     	ds	1
    87  000002                     ??_LCD_init:
    88                           
    89                           ; 1 bytes @ 0x1
    90  000002                     	ds	1
    91  000003                     send2LCD@xy:
    92                           	callstack 0
    93                           
    94                           ; 1 bytes @ 0x2
    95  000003                     	ds	1
    96  000004                     
    97                           ; 1 bytes @ 0x3
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 20 in file "main.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   117 ;;      Params:         0       0       0       0       0       0       0       0       0
   118 ;;      Locals:         0       0       0       0       0       0       0       0       0
   119 ;;      Temps:          0       0       0       0       0       0       0       0       0
   120 ;;      Totals:         0       0       0       0       0       0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called: 2
   123 ;; This function calls:
   124 ;;		_LCD_init
   125 ;;		_send2LCD
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  007F92                     __ptext0:
   133                           	callstack 0
   134  007F92                     _main:
   135                           	callstack 29
   136  007F92                     
   137                           ;main.c: 21:     OSCCON = 0x74;
   138  007F92  0E74               	movlw	116
   139  007F94  6ED3               	movwf	211,c	;volatile
   140                           
   141                           ;main.c: 22:     ANSELC = 0;
   142  007F96  0E00               	movlw	0
   143  007F98  010F               	movlb	15	; () banked
   144  007F9A  6F5D               	movwf	93,b	;volatile
   145                           
   146                           ;main.c: 23:     TRISC = 0x00;
   147  007F9C  0E00               	movlw	0
   148  007F9E  6E94               	movwf	148,c	;volatile
   149                           
   150                           ;main.c: 24:     ANSELD = 0;
   151  007FA0  0E00               	movlw	0
   152  007FA2  6F5E               	movwf	94,b	;volatile
   153                           
   154                           ;main.c: 25:     TRISD = 0x00;
   155  007FA4  0E00               	movlw	0
   156  007FA6  6E95               	movwf	149,c	;volatile
   157                           
   158                           ;main.c: 27:     TRISD = 0x00;
   159  007FA8  0E00               	movlw	0
   160  007FAA  6E95               	movwf	149,c	;volatile
   161  007FAC                     
   162                           ; BSR set to: 15
   163                           ;main.c: 29:     LATCbits.LATC2 = 0;
   164  007FAC  948B               	bcf	139,2,c	;volatile
   165  007FAE                     
   166                           ; BSR set to: 15
   167                           ;main.c: 30:     LATCbits.LATC1 = 0;
   168  007FAE  928B               	bcf	139,1,c	;volatile
   169  007FB0                     
   170                           ; BSR set to: 15
   171                           ;main.c: 31:     LATCbits.LATC0 = 0;
   172  007FB0  908B               	bcf	139,0,c	;volatile
   173  007FB2                     
   174                           ; BSR set to: 15
   175                           ;main.c: 33:     LCD_init();
   176  007FB2  EC99  F03F         	call	_LCD_init	;wreg free
   177  007FB6                     
   178                           ;main.c: 35:     send2LCD('L');
   179  007FB6  0E4C               	movlw	76
   180  007FB8  EC84  F03F         	call	_send2LCD
   181  007FBC                     
   182                           ;main.c: 36:     send2LCD('a');
   183  007FBC  0E61               	movlw	97
   184  007FBE  EC84  F03F         	call	_send2LCD
   185  007FC2                     
   186                           ;main.c: 37:     send2LCD('b');
   187  007FC2  0E62               	movlw	98
   188  007FC4  EC84  F03F         	call	_send2LCD
   189  007FC8                     
   190                           ;main.c: 38:     send2LCD('o');
   191  007FC8  0E6F               	movlw	111
   192  007FCA  EC84  F03F         	call	_send2LCD
   193  007FCE                     
   194                           ;main.c: 39:     send2LCD('r');
   195  007FCE  0E72               	movlw	114
   196  007FD0  EC84  F03F         	call	_send2LCD
   197  007FD4                     
   198                           ;main.c: 40:     send2LCD('a');
   199  007FD4  0E61               	movlw	97
   200  007FD6  EC84  F03F         	call	_send2LCD
   201  007FDA                     
   202                           ;main.c: 41:     send2LCD('t');
   203  007FDA  0E74               	movlw	116
   204  007FDC  EC84  F03F         	call	_send2LCD
   205  007FE0                     
   206                           ;main.c: 42:     send2LCD('o');
   207  007FE0  0E6F               	movlw	111
   208  007FE2  EC84  F03F         	call	_send2LCD
   209  007FE6                     
   210                           ;main.c: 43:     send2LCD('r');
   211  007FE6  0E72               	movlw	114
   212  007FE8  EC84  F03F         	call	_send2LCD
   213  007FEC                     
   214                           ;main.c: 44:     send2LCD('i');
   215  007FEC  0E69               	movlw	105
   216  007FEE  EC84  F03F         	call	_send2LCD
   217  007FF2                     
   218                           ;main.c: 45:     send2LCD('o');
   219  007FF2  0E6F               	movlw	111
   220  007FF4  EC84  F03F         	call	_send2LCD
   221  007FF8                     l35:
   222  007FF8  EFFC  F03F         	goto	l35
   223  007FFC  EF01  F000         	goto	start
   224  008000                     __end_of_main:
   225                           	callstack 0
   226                           
   227 ;; *************** function _send2LCD *****************
   228 ;; Defined at:
   229 ;;		line 50 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;  xy              1    wreg     unsigned char 
   232 ;; Auto vars:     Size  Location     Type
   233 ;;  xy              1    2[COMRAM] unsigned char 
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   243 ;;      Params:         0       0       0       0       0       0       0       0       0
   244 ;;      Locals:         1       0       0       0       0       0       0       0       0
   245 ;;      Temps:          2       0       0       0       0       0       0       0       0
   246 ;;      Totals:         3       0       0       0       0       0       0       0       0
   247 ;;Total ram usage:        3 bytes
   248 ;; Hardware stack levels used: 1
   249 ;; This function calls:
   250 ;;		Nothing
   251 ;; This function is called by:
   252 ;;		_main
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text1
   257  007F08                     __ptext1:
   258                           	callstack 0
   259  007F08                     _send2LCD:
   260                           	callstack 30
   261                           
   262                           ;incstack = 0
   263                           ;send2LCD@xy stored from wreg
   264  007F08  6E03               	movwf	send2LCD@xy^0,c
   265  007F0A                     
   266                           ;main.c: 51:     LATCbits.LATC2 = 1;
   267  007F0A  848B               	bsf	139,2,c	;volatile
   268                           
   269                           ;main.c: 52:     LATCbits.LATC1 = 0;
   270  007F0C  928B               	bcf	139,1,c	;volatile
   271                           
   272                           ;main.c: 53:     LATCbits.LATC0 = 1;
   273  007F0E  808B               	bsf	139,0,c	;volatile
   274  007F10                     
   275                           ;main.c: 54:     LATD = xy;
   276  007F10  C003  FF8C         	movff	send2LCD@xy,3980	;volatile
   277  007F14                     
   278                           ;main.c: 55:     __nop();
   279  007F14  F000               	nop	
   280  007F16                     
   281                           ;main.c: 56:     __nop();
   282  007F16  F000               	nop	
   283  007F18                     
   284                           ;main.c: 57:     LATCbits.LATC0 = 0;
   285  007F18  908B               	bcf	139,0,c	;volatile
   286  007F1A                     
   287                           ;main.c: 58:     _delay((unsigned long)((250)*(8000000/4000.0)));
   288  007F1A  0E03               	movlw	3
   289  007F1C  6E02               	movwf	(??_send2LCD+1)^0,c
   290  007F1E  0E8A               	movlw	138
   291  007F20  6E01               	movwf	??_send2LCD^0,c
   292  007F22  0E56               	movlw	86
   293  007F24                     u27:
   294  007F24  2EE8               	decfsz	wreg,f,c
   295  007F26  D7FE               	bra	u27
   296  007F28  2E01               	decfsz	??_send2LCD^0,f,c
   297  007F2A  D7FC               	bra	u27
   298  007F2C  2E02               	decfsz	(??_send2LCD+1)^0,f,c
   299  007F2E  D7FA               	bra	u27
   300  007F30  0012               	return		;funcret
   301  007F32                     __end_of_send2LCD:
   302                           	callstack 0
   303                           
   304 ;; *************** function _LCD_init *****************
   305 ;; Defined at:
   306 ;;		line 61 in file "main.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         0       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          2       0       0       0       0       0       0       0       0
   323 ;;      Totals:         2       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        2 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; Hardware stack levels required when called: 1
   327 ;; This function calls:
   328 ;;		_LCD_cmd
   329 ;; This function is called by:
   330 ;;		_main
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text2
   335  007F32                     __ptext2:
   336                           	callstack 0
   337  007F32                     _LCD_init:
   338                           	callstack 29
   339  007F32                     
   340                           ;main.c: 62:     LATC = 0;
   341  007F32  0E00               	movlw	0
   342  007F34  6E8B               	movwf	139,c	;volatile
   343  007F36                     
   344                           ;main.c: 63:     TRISCbits.TRISC0 = 0;
   345  007F36  9094               	bcf	148,0,c	;volatile
   346  007F38                     
   347                           ;main.c: 64:     TRISCbits.TRISC2 = 0;
   348  007F38  9494               	bcf	148,2,c	;volatile
   349  007F3A                     
   350                           ;main.c: 65:     TRISCbits.TRISC1 = 0;
   351  007F3A  9294               	bcf	148,1,c	;volatile
   352  007F3C                     
   353                           ;main.c: 66:     LCD_cmd(0x38);
   354  007F3C  0E38               	movlw	56
   355  007F3E  EC7A  F03F         	call	_LCD_cmd
   356  007F42                     
   357                           ;main.c: 67:     _delay((unsigned long)((250)*(8000000/4000.0)));
   358  007F42  0E03               	movlw	3
   359  007F44  6E03               	movwf	(??_LCD_init+1)^0,c
   360  007F46  0E8A               	movlw	138
   361  007F48  6E02               	movwf	??_LCD_init^0,c
   362  007F4A  0E56               	movlw	86
   363  007F4C                     u37:
   364  007F4C  2EE8               	decfsz	wreg,f,c
   365  007F4E  D7FE               	bra	u37
   366  007F50  2E02               	decfsz	??_LCD_init^0,f,c
   367  007F52  D7FC               	bra	u37
   368  007F54  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   369  007F56  D7FA               	bra	u37
   370  007F58                     
   371                           ;main.c: 68:     LCD_cmd(0x0F);
   372  007F58  0E0F               	movlw	15
   373  007F5A  EC7A  F03F         	call	_LCD_cmd
   374  007F5E                     
   375                           ;main.c: 69:     _delay((unsigned long)((250)*(8000000/4000.0)));
   376  007F5E  0E03               	movlw	3
   377  007F60  6E03               	movwf	(??_LCD_init+1)^0,c
   378  007F62  0E8A               	movlw	138
   379  007F64  6E02               	movwf	??_LCD_init^0,c
   380  007F66  0E56               	movlw	86
   381  007F68                     u47:
   382  007F68  2EE8               	decfsz	wreg,f,c
   383  007F6A  D7FE               	bra	u47
   384  007F6C  2E02               	decfsz	??_LCD_init^0,f,c
   385  007F6E  D7FC               	bra	u47
   386  007F70  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   387  007F72  D7FA               	bra	u47
   388  007F74                     
   389                           ;main.c: 70:     LCD_cmd(0x01);
   390  007F74  0E01               	movlw	1
   391  007F76  EC7A  F03F         	call	_LCD_cmd
   392  007F7A                     
   393                           ;main.c: 71:     _delay((unsigned long)((250)*(8000000/4000.0)));
   394  007F7A  0E03               	movlw	3
   395  007F7C  6E03               	movwf	(??_LCD_init+1)^0,c
   396  007F7E  0E8A               	movlw	138
   397  007F80  6E02               	movwf	??_LCD_init^0,c
   398  007F82  0E56               	movlw	86
   399  007F84                     u57:
   400  007F84  2EE8               	decfsz	wreg,f,c
   401  007F86  D7FE               	bra	u57
   402  007F88  2E02               	decfsz	??_LCD_init^0,f,c
   403  007F8A  D7FC               	bra	u57
   404  007F8C  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   405  007F8E  D7FA               	bra	u57
   406  007F90  0012               	return		;funcret
   407  007F92                     __end_of_LCD_init:
   408                           	callstack 0
   409                           
   410 ;; *************** function _LCD_cmd *****************
   411 ;; Defined at:
   412 ;;		line 90 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  cx              1    wreg     unsigned char 
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  cx              1    0[COMRAM] unsigned char 
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   426 ;;      Params:         0       0       0       0       0       0       0       0       0
   427 ;;      Locals:         1       0       0       0       0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0       0       0       0       0
   429 ;;      Totals:         1       0       0       0       0       0       0       0       0
   430 ;;Total ram usage:        1 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_LCD_init
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text3
   440  007EF4                     __ptext3:
   441                           	callstack 0
   442  007EF4                     _LCD_cmd:
   443                           	callstack 29
   444                           
   445                           ;incstack = 0
   446                           ;LCD_cmd@cx stored from wreg
   447  007EF4  6E01               	movwf	LCD_cmd@cx^0,c
   448  007EF6                     
   449                           ;main.c: 92:     LATCbits.LATC2 = 0;
   450  007EF6  948B               	bcf	139,2,c	;volatile
   451                           
   452                           ;main.c: 93:     LATCbits.LATC1 = 0;
   453  007EF8  928B               	bcf	139,1,c	;volatile
   454                           
   455                           ;main.c: 94:     LATCbits.LATC0 = 1;
   456  007EFA  808B               	bsf	139,0,c	;volatile
   457                           
   458                           ;main.c: 95:     __nop();
   459  007EFC  F000               	nop	
   460  007EFE                     
   461                           ;main.c: 96:     LATD = cx;
   462  007EFE  C001  FF8C         	movff	LCD_cmd@cx,3980	;volatile
   463  007F02                     
   464                           ;main.c: 97:     __nop();
   465  007F02  F000               	nop	
   466  007F04                     
   467                           ;main.c: 98:     LATCbits.LATC0 = 0;
   468  007F04  908B               	bcf	139,0,c	;volatile
   469  007F06  0012               	return		;funcret
   470  007F08                     __end_of_LCD_cmd:
   471                           	callstack 0
   472  0000                     
   473                           	psect	rparam
   474  0000                     
   475                           	psect	idloc
   476                           
   477                           ;Config register IDLOC0 @ 0x200000
   478                           ;	unspecified, using default values
   479  200000                     	org	2097152
   480  200000  FF                 	db	255
   481                           
   482                           ;Config register IDLOC1 @ 0x200001
   483                           ;	unspecified, using default values
   484  200001                     	org	2097153
   485  200001  FF                 	db	255
   486                           
   487                           ;Config register IDLOC2 @ 0x200002
   488                           ;	unspecified, using default values
   489  200002                     	org	2097154
   490  200002  FF                 	db	255
   491                           
   492                           ;Config register IDLOC3 @ 0x200003
   493                           ;	unspecified, using default values
   494  200003                     	org	2097155
   495  200003  FF                 	db	255
   496                           
   497                           ;Config register IDLOC4 @ 0x200004
   498                           ;	unspecified, using default values
   499  200004                     	org	2097156
   500  200004  FF                 	db	255
   501                           
   502                           ;Config register IDLOC5 @ 0x200005
   503                           ;	unspecified, using default values
   504  200005                     	org	2097157
   505  200005  FF                 	db	255
   506                           
   507                           ;Config register IDLOC6 @ 0x200006
   508                           ;	unspecified, using default values
   509  200006                     	org	2097158
   510  200006  FF                 	db	255
   511                           
   512                           ;Config register IDLOC7 @ 0x200007
   513                           ;	unspecified, using default values
   514  200007                     	org	2097159
   515  200007  FF                 	db	255
   516                           
   517                           	psect	config
   518                           
   519                           ;Config register CONFIG1L @ 0x300000
   520                           ;	PLL Selection
   521                           ;	PLLSEL = PLL4X, 4x clock multiplier
   522                           ;	PLL Enable Configuration bit
   523                           ;	CFGPLLEN = ON, PLL Enabled
   524                           ;	CPU System Clock Postscaler
   525                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   526                           ;	Low Speed USB mode with 48 MHz system clock
   527                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   528  300000                     	org	3145728
   529  300000  02                 	db	2
   530                           
   531                           ;Config register CONFIG1H @ 0x300001
   532                           ;	Oscillator Selection
   533                           ;	FOSC = INTOSCIO, Internal oscillator
   534                           ;	Primary Oscillator Shutdown
   535                           ;	PCLKEN = ON, Primary oscillator enabled
   536                           ;	Fail-Safe Clock Monitor
   537                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   538                           ;	Internal/External Oscillator Switchover
   539                           ;	IESO = OFF, Oscillator Switchover mode disabled
   540  300001                     	org	3145729
   541  300001  28                 	db	40
   542                           
   543                           ;Config register CONFIG2L @ 0x300002
   544                           ;	Power-up Timer Enable
   545                           ;	nPWRTEN = OFF, Power up timer disabled
   546                           ;	Brown-out Reset Enable
   547                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   548                           ;	Brown-out Reset Voltage
   549                           ;	BORV = 190, BOR set to 1.9V nominal
   550                           ;	Low-Power Brown-out Reset
   551                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   552  300002                     	org	3145730
   553  300002  5F                 	db	95
   554                           
   555                           ;Config register CONFIG2H @ 0x300003
   556                           ;	Watchdog Timer Enable bits
   557                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   558                           ;	Watchdog Timer Postscaler
   559                           ;	WDTPS = 32768, 1:32768
   560  300003                     	org	3145731
   561  300003  3C                 	db	60
   562                           
   563                           ; Padding undefined space
   564  300004                     	org	3145732
   565  300004  FF                 	db	255
   566                           
   567                           ;Config register CONFIG3H @ 0x300005
   568                           ;	CCP2 MUX bit
   569                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   570                           ;	PORTB A/D Enable bit
   571                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   572                           ;	Timer3 Clock Input MUX bit
   573                           ;	T3CMX = RC0, T3CKI function is on RC0
   574                           ;	SDO Output MUX bit
   575                           ;	SDOMX = RB3, SDO function is on RB3
   576                           ;	Master Clear Reset Pin Enable
   577                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   578  300005                     	org	3145733
   579  300005  D1                 	db	209
   580                           
   581                           ;Config register CONFIG4L @ 0x300006
   582                           ;	Stack Full/Underflow Reset
   583                           ;	STVREN = ON, Stack full/underflow will cause Reset
   584                           ;	Single-Supply ICSP Enable bit
   585                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   586                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   587                           ;	ICPRT = OFF, ICPORT disabled
   588                           ;	Extended Instruction Set Enable bit
   589                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   590                           ;	Background Debugger Enable bit
   591                           ;	DEBUG = 0x1, unprogrammed default
   592  300006                     	org	3145734
   593  300006  85                 	db	133
   594                           
   595                           ; Padding undefined space
   596  300007                     	org	3145735
   597  300007  FF                 	db	255
   598                           
   599                           ;Config register CONFIG5L @ 0x300008
   600                           ;	Block 0 Code Protect
   601                           ;	CP0 = OFF, Block 0 is not code-protected
   602                           ;	Block 1 Code Protect
   603                           ;	CP1 = OFF, Block 1 is not code-protected
   604                           ;	Block 2 Code Protect
   605                           ;	CP2 = OFF, Block 2 is not code-protected
   606                           ;	Block 3 Code Protect
   607                           ;	CP3 = OFF, Block 3 is not code-protected
   608  300008                     	org	3145736
   609  300008  0F                 	db	15
   610                           
   611                           ;Config register CONFIG5H @ 0x300009
   612                           ;	Boot Block Code Protect
   613                           ;	CPB = OFF, Boot block is not code-protected
   614                           ;	Data EEPROM Code Protect
   615                           ;	CPD = OFF, Data EEPROM is not code-protected
   616  300009                     	org	3145737
   617  300009  C0                 	db	192
   618                           
   619                           ;Config register CONFIG6L @ 0x30000A
   620                           ;	Block 0 Write Protect
   621                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   622                           ;	Block 1 Write Protect
   623                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   624                           ;	Block 2 Write Protect
   625                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   626                           ;	Block 3 Write Protect
   627                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   628  30000A                     	org	3145738
   629  30000A  0F                 	db	15
   630                           
   631                           ;Config register CONFIG6H @ 0x30000B
   632                           ;	Configuration Registers Write Protect
   633                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   634                           ;	Boot Block Write Protect
   635                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   636                           ;	Data EEPROM Write Protect
   637                           ;	WRTD = OFF, Data EEPROM is not write-protected
   638  30000B                     	org	3145739
   639  30000B  E0                 	db	224
   640                           
   641                           ;Config register CONFIG7L @ 0x30000C
   642                           ;	Block 0 Table Read Protect
   643                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   644                           ;	Block 1 Table Read Protect
   645                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   646                           ;	Block 2 Table Read Protect
   647                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   648                           ;	Block 3 Table Read Protect
   649                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   650  30000C                     	org	3145740
   651  30000C  0F                 	db	15
   652                           
   653                           ;Config register CONFIG7H @ 0x30000D
   654                           ;	Boot Block Table Read Protect
   655                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   656  30000D                     	org	3145741
   657  30000D  40                 	db	64
   658                           tosu	equ	0xFFF
   659                           tosh	equ	0xFFE
   660                           tosl	equ	0xFFD
   661                           stkptr	equ	0xFFC
   662                           pclatu	equ	0xFFB
   663                           pclath	equ	0xFFA
   664                           pcl	equ	0xFF9
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           prodh	equ	0xFF4
   670                           prodl	equ	0xFF3
   671                           indf0	equ	0xFEF
   672                           postinc0	equ	0xFEE
   673                           postdec0	equ	0xFED
   674                           preinc0	equ	0xFEC
   675                           plusw0	equ	0xFEB
   676                           fsr0h	equ	0xFEA
   677                           fsr0l	equ	0xFE9
   678                           wreg	equ	0xFE8
   679                           indf1	equ	0xFE7
   680                           postinc1	equ	0xFE6
   681                           postdec1	equ	0xFE5
   682                           preinc1	equ	0xFE4
   683                           plusw1	equ	0xFE3
   684                           fsr1h	equ	0xFE2
   685                           fsr1l	equ	0xFE1
   686                           bsr	equ	0xFE0
   687                           indf2	equ	0xFDF
   688                           postinc2	equ	0xFDE
   689                           postdec2	equ	0xFDD
   690                           preinc2	equ	0xFDC
   691                           plusw2	equ	0xFDB
   692                           fsr2h	equ	0xFDA
   693                           fsr2l	equ	0xFD9
   694                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_init
    _main->_send2LCD
    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                           _LCD_init
                           _send2LCD
 ---------------------------------------------------------------------------------
 (1) _send2LCD                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      15
                                              1 COMRAM     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_cmd
   _send2LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BANK3              100      0       0       9        0.0%
BANK4              100      0       0      10        0.0%
BITBANK5           100      0       0      11        0.0%
BANK5              100      0       0      12        0.0%
BITBANK6           100      0       0      13        0.0%
BANK6              100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK2           100      0       0      16        0.0%
BITBANK3           100      0       0      17        0.0%
BITBANK4           100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BITBIGSFRh          29      0       0      20        0.0%
BITBIGSFRlhh        3D      0       0      21        0.0%
BITBIGSFRlhlh        7      0       0      22        0.0%
BITBIGSFRlhllh       7      0       0      23        0.0%
BITBIGSFRlhlll      24      0       0      24        0.0%
BITBIGSFRll          A      0       0      25        0.0%
ABS                  0      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 18 17:14:46 2022

                     l41 7F30                       l35 7FF8                       l44 7F90  
                     l36 7FF8                       l53 7F06                       u27 7F24  
                     u37 7F4C                       u47 7F68                       u57 7F84  
                    l731 7EFE                      l733 7F02                      l741 7F38  
                    l735 7F04                      l751 7F5E                      l743 7F3A  
                    l729 7EF6                      l753 7F74                      l745 7F3C  
                    l737 7F32                      l761 7F14                      l755 7F7A  
                    l747 7F42                      l739 7F36                      l763 7F16  
                    l771 7FAC                      l749 7F58                      l765 7F18  
                    l757 7F0A                      l781 7FBC                      l773 7FAE  
                    l767 7F1A                      l759 7F10                      l791 7FDA  
                    l783 7FC2                      l775 7FB0                      l793 7FE0  
                    l785 7FC8                      l777 7FB2                      l769 7F92  
                    l795 7FE6                      l787 7FCE                      l779 7FB6  
                    l797 7FEC                      l789 7FD4                      l799 7FF2  
                    wreg 000FE8          __end_of_LCD_cmd 7F08                     _LATC 000F8B  
                   _LATD 000F8C                     _main 7F92                     start 0002  
           ___param_bank 000000         __end_of_LCD_init 7F92                    ?_main 0001  
                  _PORTD 000F83                    _TRISC 000F94                    _TRISD 000F95  
        __initialization 7EEE             __end_of_main 8000                   ??_main 0004  
          __activetblptr 000000                ??_LCD_cmd 0001                   _ANSELC 000F5D  
                 _ANSELD 000F5E                   _OSCCON 000FD3         __end_of_send2LCD 7F32  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7EEE  
              ?_LCD_init 0001            ___rparam_used 000001           __pcstackCOMRAM 0001  
              LCD_cmd@cx 0001               ??_LCD_init 0002                  _LCD_cmd 7EF4  
              ?_send2LCD 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7EEE                  __ramtop 0800                  __ptext0 7F92  
                __ptext1 7F08                  __ptext2 7F32                  __ptext3 7EF4  
   end_of_initialization 7EEE               ??_send2LCD 0001                _TRISCbits 000F94  
    start_initialization 7EEE               send2LCD@xy 0003                 ?_LCD_cmd 0001  
               _LATCbits 000F8B                 _LCD_init 7F32                 __Hrparam 0000  
               __Lrparam 0000                 _send2LCD 7F08                 isa$xinst 000000  
